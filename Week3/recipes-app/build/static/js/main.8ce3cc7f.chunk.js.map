{"version":3,"sources":["Components/Search.js","Components/Recipe.js","Components/Error.js","App.js","index.js"],"names":["Search","props","type","placeholder","value","input","onChange","handleInputChange","onClick","getRecipes","Recipe","recipe","className","label","src","image","alt","healthLabels","map","index","key","ingredientLines","ingredient","calories","toFixed","href","shareAs","target","Error","msg","appKey","App","useState","recipes","setRecipes","setInput","error","setError","e","a","preventDefault","fetch","res","json","data","hits","length","document","querySelector","ReactDOM","render","getElementById"],"mappings":"iTAGO,SAASA,EAAOC,GACnB,OACI,0BAAMC,KAAK,UACP,2BACIC,YAAY,kBACZC,MAAOH,EAAMI,MACbC,SAAUL,EAAMM,oBAEpB,4BAAQC,QAASP,EAAMQ,YAAvB,iB,MCRL,SAASC,EAAT,GAAmC,IAAVC,EAAS,EAAjBA,OAAQA,OAC5B,OACI,yBAAKC,UAAU,UACX,4BAAKD,EAAOE,OACZ,yBAAKC,IAAKH,EAAOI,MAAOC,IAAKL,EAAOE,QACpC,6BAASD,UAAU,gBACf,6CACA,4BACKD,EAAOM,aAAaC,KAAI,SAACL,EAAMM,GAAP,OAAiB,wBAAIC,IAAKD,GAAQN,QAGnE,6BAASD,UAAU,eACf,2CACA,4BACKD,EAAOU,gBAAgBH,KAAI,SAACI,EAAWH,GAAZ,OAAsB,wBAAIC,IAAKD,GAAQG,QAG3E,6BAASV,UAAU,aACf,wCAAcD,EAAOY,SAASC,QAAQ,GAAtC,QACA,uBAAGC,KAAMd,EAAOe,QAASC,OAAO,UAAhC,yB,MCnBT,SAASC,EAAO3B,GACnB,OAAKA,EAAM4B,IAIP,yBAAKjB,UAAU,SACX,2BAAIX,EAAM4B,MAJP,qC,UCETC,EAAS,mCAsCAC,MAnCf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEaF,mBAAS,IAFtB,mBAEN3B,EAFM,KAEC8B,EAFD,OAGaH,mBAAS,IAHtB,mBAGNI,EAHM,KAGCC,EAHD,iDAMb,WAA0BC,GAA1B,iBAAAC,EAAA,6DACED,EAAEE,iBADJ,SAEoBC,MAAM,mCAAD,OAAoCpC,EAApC,mBAZb,WAYa,oBAAqEyB,IAF9F,cAEQY,EAFR,gBAGqBA,EAAIC,OAHzB,UAIyB,IADjBC,EAHR,QAIUC,KAAKC,OAJf,wBAKIT,EAAS,0BALb,2BAQEA,EAAS,IACTH,EAAWU,EAAKC,MAChBV,EAAS,IAVX,6CANa,sBAoBb,OACE,yBAAKvB,UAAU,OACb,kBAAC,EAAD,CACEP,MAAOA,EACPE,kBAAmB,kBAAK4B,EAASY,SAASC,cAAc,SAAS5C,QACjEK,WAzBO,8CA2BT,yBAAKG,UAAU,WACZqB,EAAUA,EAAQf,KAAI,SAACP,EAAOQ,GAAR,OAAkB,kBAAC,EAAD,CAAQC,IAAKD,EAAOR,OAAQA,OAAc,IAErF,kBAAC,EAAD,CAAOkB,IAAKO,MCpClBa,IAASC,OAAO,kBAAC,EAAD,MAASH,SAASI,eAAe,W","file":"static/js/main.8ce3cc7f.chunk.js","sourcesContent":["import React from 'react';\nimport '../Styles/Search.scss';\n\nexport function Search(props){\n    return (\n        <form type=\"submit\">\n            <input \n                placeholder=\"Type any food!!\" \n                value={props.input} \n                onChange={props.handleInputChange} \n            />\n            <button onClick={props.getRecipes}>Get Recipes!</button>\n        </form>\n    );\n};","import React from 'react';\nimport '../Styles/Recipe.scss';\n\nexport function Recipe({recipe:{recipe}}){\n    return (\n        <div className=\"recipe\">\n            <h1>{recipe.label}</h1>\n            <img src={recipe.image} alt={recipe.label}/>\n            <section className=\"healthLabels\">\n                <h3>Health Labels</h3>\n                <ul>\n                    {recipe.healthLabels.map((label,index) => <li key={index}>{label}</li>)}\n                </ul>\n            </section>\n            <section className=\"ingredients\">\n                <h3>Ingredients</h3>\n                <ul>\n                    {recipe.ingredientLines.map((ingredient,index) => <li key={index}>{ingredient}</li>)}\n                </ul>\n            </section>\n            <section className=\"moreInfos\">\n                <p>Calories: {recipe.calories.toFixed(2)}kcal</p>\n                <a href={recipe.shareAs} target=\"_blank\">Instructions Here..</a>\n            </section>\n        </div>\n    );\n};","import React from 'react';\nimport '../Styles/Error.scss';\n\nexport function Error (props){\n    if (!props.msg){\n        return <></>;\n    }\n    return (\n        <div className=\"error\">\n            <p>{props.msg}</p>\n        </div>\n    )\n};","import React, {useState} from 'react';\nimport {Search} from './Components/Search';\nimport {Recipe} from './Components/Recipe';\nimport {Error} from './Components/Error';\nimport './Styles/App.scss';\n\nconst appId = \"55b7a87e\";\nconst appKey = \"71dc3d59240e5cb5fb75c75b20b8afca\";\n\n\nfunction App() {\n  const [recipes, setRecipes] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n\n  async function getRecipes(e){\n    e.preventDefault();\n    const res = await fetch(`https://api.edamam.com/search?q=${input}&app_id=${appId}&app_key=${appKey}`);\n    const data = await res.json();\n    if(data.hits.length == 0){\n      setError(\"No food by that name..\");\n      return;\n    }\n    setError(\"\");\n    setRecipes(data.hits);\n    setInput(\"\");\n  };\n\n\n  return (\n    <div className=\"app\">\n      <Search \n        input={input} \n        handleInputChange={()=> setInput(document.querySelector(\"input\").value)} \n        getRecipes={getRecipes}\n      />\n      <div className=\"recipes\">\n        {recipes ? recipes.map((recipe,index) => <Recipe key={index} recipe={recipe} />) : \"\"}\n      </div>\n      <Error msg={error} />\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}