{"version":3,"sources":["components/Delete.js","components/CountryCard.js","components/Search.js","components/Error.js","App.js","customHook.js","index.js"],"names":["Delete","handleDelete","onClick","className","CountryCard","countryInfo","countriesInfo","setCountriesInfo","error","e","a","nodeToRemove","target","parentNode","newCountries","filter","name","id","cod","sys","country","weather","main","description","temp_min","toFixed","temp_max","coord","lat","lon","Search","props","type","placeholder","handleSearch","Error","require","config","App","useState","setError","preventDefault","city","previousSibling","value","fetch","process","res","json","data","setTimeout","useGetCountries","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"4TAEO,SAASA,EAAT,GAAgC,IAAfC,EAAc,EAAdA,aACpB,OAAO,uBAAGC,QAASD,EAAcE,UAAU,8B,MCExC,SAASC,EAAT,GAA2E,IAArDC,EAAoD,EAApDA,YAAYC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,iBAAyB,EAAPC,MAAO,4CAE7E,WAA4BC,GAA5B,iBAAAC,EAAA,sDACUC,EAAgBF,EAAEG,OAAOC,WAAWA,WACpCC,EAAeR,EAAcS,QAAO,SAAAV,GAAW,OAAIA,EAAYW,MAAQL,EAAaM,MAC1FV,EAAiBO,GAHrB,4CAF6E,sBAQ7E,OAAIT,GACuB,KAAnBA,EAAYa,IAER,yBAAKD,GAAIZ,EAAYW,KAAMb,UAAY,eACnC,yBAAKA,UAAU,QACX,4BAAKE,EAAYW,KAAjB,KAAyBX,EAAYc,IAAIC,SACzC,kBAACpB,EAAD,CAAQC,aAdiD,+CAgB7D,4BAAKI,EAAYgB,QAAQ,GAAGC,MAC5B,2BAAIjB,EAAYgB,QAAQ,GAAGE,aAC3B,yCAAelB,EAAYiB,KAAKE,SAAW,QAAQC,QAAQ,GAA3D,MACA,yCAAepB,EAAYiB,KAAKI,SAAW,QAAQD,QAAQ,GAA3D,MACA,wCAAcpB,EAAYsB,MAAMC,IAAhC,KAAuCvB,EAAYsB,MAAME,MAI5D,qC,MC1BV,SAASC,EAAOC,GACnB,OACI,0BAAM5B,UAAU,UACZ,uBAAGA,UAAU,kBAAoB,2BAAO6B,KAAK,OAAOC,YAAY,gBAChE,4BAAQD,KAAK,SAAS9B,QAAS6B,EAAMG,cAArC,W,MCJL,SAASC,EAAT,GAAwB,IAAR3B,EAAO,EAAPA,MACnB,OAAIA,EACO,uBAAGL,UAAY,SAASK,GACtB,qC,WCAjB4B,EAAQ,IAAUC,SAgBHC,MAbf,WAAgB,IAAD,ECPR,WAA2B,IAAD,EACaC,mBAAS,IADtB,mBACtBjC,EADsB,KACPC,EADO,OAEHgC,mBAAS,MAFN,mBAEtB/B,EAFsB,KAEfgC,EAFe,iDAI7B,WAA4B/B,GAA5B,mBAAAC,EAAA,6DACID,EAAEgC,iBACIC,EAAOjC,EAAEG,OAAO+B,gBAAgBC,MACtCnC,EAAEG,OAAO+B,gBAAgBC,MAAQ,GAHrC,kBAM0BC,MAAM,qDAAD,OAAsDH,EAAtD,kBAAoEI,qCANnG,cAMcC,EANd,gBAO2BA,EAAIC,OAP/B,UAQuB,MADTC,EAPd,QAQgB/B,IARhB,uBASc,IAAIiB,MATlB,QAWQ5B,EAAiB,GAAD,mBAAKD,GAAL,CAAoB2C,KAX5C,0DAcIT,EAAS,6BACTU,YAAW,kBAAMV,EAAS,QAAM,KAfpC,mEAJ6B,sBAuB7B,MAAO,CAvBsB,4CAuBPlC,EAAeC,EAAkBC,GDfM2C,GADlD,mBACNjB,EADM,KACQ5B,EADR,KACuBC,EADvB,KACyCC,EADzC,KAGb,OACE,yBAAKL,UAAU,OACb,uCACA,kBAAC,EAAD,CAAQ+B,aAAcA,IACtB,kBAAC,EAAD,CAAO1B,MAAOA,IACbF,EAAc8C,KAAI,SAAC/C,EAAYgD,GAAb,OAAuB,kBAAC,EAAD,CAAaC,IAAKD,EAAO9C,iBAAkBA,EAAkBD,cAAeA,EAAeD,YAAaA,SEZxJkD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c10ea324.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Delete({handleDelete}){\n    return <i onClick={handleDelete} className=\"far fa-times-circle fa-2x\"></i>;\n};","import React from 'react';\nimport {Delete} from './Delete';\nimport '../styles/CountryCard.scss';\n\n\nexport function CountryCard({countryInfo,countriesInfo, setCountriesInfo, error}){\n\n    async function handleDelete(e){\n        const nodeToRemove =  e.target.parentNode.parentNode;\n        const newCountries = countriesInfo.filter(countryInfo => countryInfo.name != nodeToRemove.id);\n        setCountriesInfo(newCountries);\n    };\n\n    if (countryInfo){\n        if (countryInfo.cod == 200){\n            return(\n                <div id={countryInfo.name} className = \"countryCard\">\n                    <div className=\"head\">\n                        <h1>{countryInfo.name}, {countryInfo.sys.country}</h1>\n                        <Delete handleDelete={handleDelete} />\n                    </div>\n                    <h2>{countryInfo.weather[0].main}</h2>\n                    <p>{countryInfo.weather[0].description}</p>\n                    <p>min temp: {(countryInfo.main.temp_min - 273.15).toFixed(2)} C</p>\n                    <p>max temp: {(countryInfo.main.temp_max - 273.15).toFixed(2)} C</p>\n                    <p>location: {countryInfo.coord.lat}, {countryInfo.coord.lon}</p>\n                </div>\n            );\n        }else return <></>;    \n    }else return <></>;\n};","import React from 'react';\nimport '../styles/Search.scss';\n\nexport function Search(props){\n    return (\n        <form className=\"search\">\n            <i className=\"fas fa-search\"></i><input type=\"text\" placeholder=\"Search City\" />\n            <button type=\"submit\" onClick={props.handleSearch}>Search</button>\n        </form>\n    );\n};","import React from 'react';\nimport '../styles/Error.scss';\n\nexport function Error({error}){\n    if (error){\n        return <p className = \"error\">{error}</p>;\n    }else return <></>;\n};","import React from 'react';\nimport './styles/App.scss';\nimport {CountryCard} from './components/CountryCard';\nimport {Search} from './components/Search';\nimport {Error} from './components/Error';\nimport {useGetCountries} from './customHook';\nrequire('dotenv').config()\n\n\nfunction App() {\n  const [handleSearch ,countriesInfo, setCountriesInfo, error] = useGetCountries();\n\n  return (\n    <div className=\"app\">\n      <h1>Weather</h1>\n      <Search handleSearch={handleSearch} />\n      <Error error={error} />\n      {countriesInfo.map((countryInfo,index) => <CountryCard key={index} setCountriesInfo={setCountriesInfo} countriesInfo={countriesInfo} countryInfo={countryInfo}/>)}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","import {useState} from 'react';\n\nexport function useGetCountries(){\n    const [countriesInfo, setCountriesInfo] = useState([]);\n    const [error, setError] = useState(null);\n\n    async function handleSearch(e){\n        e.preventDefault();\n        const city = e.target.previousSibling.value;\n        e.target.previousSibling.value = \"\";\n\n        try{\n            const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`);\n            const data = await res.json();\n            if(data.cod != 200){\n            throw new Error();\n            }else{\n            setCountriesInfo([...countriesInfo, data]);\n            }\n        }catch(e){\n        setError(\"No country by that name..\");\n        setTimeout(() => setError(null),2000);\n        };\n    };\n\n    return [handleSearch, countriesInfo, setCountriesInfo, error];\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}