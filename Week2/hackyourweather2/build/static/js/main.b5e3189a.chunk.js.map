{"version":3,"sources":["components/CountryCard.js","components/Search.js","App.js","index.js"],"names":["require","CountryCard","countryInfo","cod","className","name","sys","country","weather","main","description","temp_min","toFixed","temp_max","coord","lat","lon","Search","props","type","placeholder","onClick","handleSearch","weatherJson","config","App","map","index","key","useState","setCountryInfo","e","a","preventDefault","city","target","previousSibling","value","fetch","process","res","json","data","Error","message","ReactDOM","render","document","getElementById"],"mappings":"kjFAEoBA,EAAQ,GAGrB,SAASC,EAAT,GAAoC,IAAdC,EAAa,EAAbA,YACzB,OAAoB,OAAhBA,EACuB,KAAnBA,EAAYC,IAER,yBAAKC,UAAY,eACb,4BAAKF,EAAYG,KAAjB,KAAyBH,EAAYI,IAAIC,SACzC,4BAAKL,EAAYM,QAAQ,GAAGC,MAC5B,2BAAIP,EAAYM,QAAQ,GAAGE,aAC3B,yCAAeR,EAAYO,KAAKE,SAAW,QAAQC,QAAQ,GAA3D,MACA,yCAAeV,EAAYO,KAAKI,SAAW,QAAQD,QAAQ,GAA3D,MACA,wCAAcV,EAAYY,MAAMC,IAAhC,KAAuCb,EAAYY,MAAME,MAI1D,uBAAGZ,UAAY,eAAeF,GAEhC,G,MClBV,SAASe,EAAOC,GACnB,OACI,0BAAMd,UAAU,UACZ,uBAAGA,UAAU,kBAAoB,2BAAOe,KAAK,OAAOC,YAAY,gBAChE,4BAAQD,KAAK,SAASE,QAASH,EAAMI,cAArC,WCHZ,IAAMC,EAAcvB,EAAQ,GAC5BA,EAAQ,IAAUwB,SAoCHC,MAjCf,WACsBF,EAAYG,KAAI,SAACnB,EAASoB,GAAV,OAAoB,kBAAC,EAAD,CAAaA,MAASA,EAAOC,IAAOD,OAA5F,IADa,EAEyBE,mBAAS,MAFlC,mBAEN3B,EAFM,KAEO4B,EAFP,iDAIb,WAA4BC,GAA5B,mBAAAC,EAAA,6DACED,EAAEE,iBACIC,EAAOH,EAAEI,OAAOC,gBAAgBC,MACtCN,EAAEI,OAAOC,gBAAgBC,MAAQ,GAHnC,kBAMwBC,MAAM,qDAAD,OAAsDJ,EAAtD,kBAAoEK,qCANjG,cAMYC,EANZ,gBAOyBA,EAAIC,OAP7B,UAQqB,MADTC,EAPZ,QAQcvC,IARd,uBASc,IAAIwC,MAAM,6BATxB,QAWQb,EAAeY,GAXvB,0DAcIZ,EAAe,KAAEc,SAdrB,mEAJa,sBAwBb,OACE,yBAAKxC,UAAU,OACb,uCACA,kBAAC,EAAD,CAAQkB,aA3BC,8CA4BT,kBAAC,EAAD,CAAapB,YAAaA,MC/BhC2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b5e3189a.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/CountryCard.scss';\nconst weatherJson = require('../city-weather.json');\n\n\nexport function CountryCard({countryInfo}){\n    if (countryInfo !== null){\n        if (countryInfo.cod == 200){\n            return(\n                <div className = \"countryCard\">\n                    <h1>{countryInfo.name}, {countryInfo.sys.country}</h1>\n                    <h2>{countryInfo.weather[0].main}</h2>\n                    <p>{countryInfo.weather[0].description}</p>\n                    <p>min temp: {(countryInfo.main.temp_min - 273.15).toFixed(2)} C</p>\n                    <p>max temp: {(countryInfo.main.temp_max - 273.15).toFixed(2)} C</p>\n                    <p>location: {countryInfo.coord.lat}, {countryInfo.coord.lon}</p>\n                </div>\n            );\n        }else{\n            return <p className = \"countryCard\">{countryInfo}</p>;\n        };    \n    }else return \"\";\n};","import React from 'react';\nimport '../styles/Search.scss';\n\nexport function Search(props){\n    return (\n        <form className=\"search\">\n            <i className=\"fas fa-search\"></i><input type=\"text\" placeholder=\"Search City\" />\n            <button type=\"submit\" onClick={props.handleSearch}>Search</button>\n        </form>\n    );\n};","import React, {useState} from 'react';\nimport './styles/App.scss';\nimport {CountryCard} from './components/CountryCard';\nimport {Search} from './components/Search';\nconst weatherJson = require('./city-weather.json');\nrequire('dotenv').config()\n\n\nfunction App() {\n  const weatherList = weatherJson.map((country, index) => <CountryCard index = {index} key = {index}/>);\n  const [countryInfo, setCountryInfo] = useState(null);\n\n  async function handleSearch(e){\n    e.preventDefault();\n    const city = e.target.previousSibling.value;\n    e.target.previousSibling.value = \"\";\n\n    try{\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`);\n        const data = await res.json();\n        if(data.cod != 200){\n          throw new Error(\"No country by that name..\");\n        }else{\n          setCountryInfo(data);\n        }\n      }catch(e){\n      setCountryInfo(e.message);\n    };\n\n  };\n\n  \n  return (\n    <div className=\"app\">\n      <h1>Weather</h1>\n      <Search handleSearch={handleSearch} />\n      <CountryCard countryInfo={countryInfo}/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}